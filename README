漸化式で表せる数列をイテレーターでいじれたら楽しいと思いました。
メタプログラミングの練習でつくったようなもんです。

使い方


//ここではフィボナッチ数列を例とする
int main() {

//  漸化式のクラス < 漸化式の階数, 並べる数の型 > インスタンス名(
//     漸化式を表すラムダ式);
    RecurrenceFormula<2, int> f(
        [](int a1, int a2) {return a1 + a2;});


//  漸化式.begin(初期値1, 初期値2...);
    auto b = f.begin(0, 1);


//  漸化式.end(項数);
    auto e = f.end(10);

    std::copy(b, e, std::ostream_iterator<int>(std::cout, " "));
//  0 1 1 2 3 5 8 13 21 34

    std::cout << std::accumulate(b, e, 0) << std::endl;
//  88

    return 0;
}

